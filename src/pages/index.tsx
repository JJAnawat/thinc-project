import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import { useEffect, useState } from "react";
import Header from "~/components/Header";
import { AnimateOnScroll } from "~/utils/validator/hooks/VisibilityHook";
import { api } from "~/utils/api";

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className=" flex min-h-screen flex-col items-center justify-center">
        <Header />
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          <Hero></Hero>
          <h1 className="text-5xl font-extrabold tracking-tight text-white sm:text-[5rem]">
            Create <span className="text-[hsl(280,100%,70%)]">T3</span> App
          </h1>
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">First Steps ‚Üí</h3>
              <div className="text-lg">
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3 className="text-2xl font-bold">Documentation ‚Üí</h3>
              <div className="text-lg">
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.post.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
}

const generate4RandomUniqueEmoji = (emoji_list: string[]) => {
  const emoji: string[] = [];
  while (emoji.length < 4) {
    const randomEmoji =
      emoji_list[Math.floor(Math.random() * emoji_list.length)] ?? "";
    if (!emoji.includes(randomEmoji)) {
      emoji.push(randomEmoji);
    }
  }
  return emoji;
};

const Hero = () => {
  const [emoji, setEmoji] = useState<string[]>([]);
  const emoji_list = [
    "üé≤",
    "üé∞",
    "üèá",
    "üé´",
    "üíπ",
    "üí∞",
    "üí∏",
    "üí°",
    "üí°",
    "üí°",
    "üí°",
    "ü™Ä",
    "üÉè",
    "ü§û",
    "üíµ",
    "ü•á",
    "üçª",
    "‚öΩÔ∏è",
  ];
  useEffect(() => {
    setEmoji(generate4RandomUniqueEmoji(emoji_list));
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);
  return (
    <div className="hero h-screen w-full select-none">
      <div className="hero-content text-center">
        <div className="relative max-w-md py-0 lg:py-10">
          <AnimateOnScroll reappear={true}>
            <h1 className="items-center justify-center text-5xl sm:text-7xl">
              Bet on
              <span className="text-secondary-focus block h-[calc(theme(fontSize.5xl)*theme(lineHeight.tight))] flex-col overflow-hidden md:h-[calc(theme(fontSize.7xl)*theme(lineHeight.tight))]">
                <ul className="animate-text-slide block text-center leading-tight [&_li]:block">
                  <li>
                    Futures
                    <div className="inline align-middle text-4xl sm:text-6xl">
                      ‚è≥
                    </div>
                  </li>
                  <li>
                    Grades
                    <div className="text-error inline">{"üá´"}</div>
                  </li>
                  <li>
                    Events
                    <div className="inline align-middle text-4xl sm:text-6xl">
                      üìÖ
                    </div>
                  </li>
                  <li>
                    Predictions
                    <div className="inline align-middle text-4xl sm:text-6xl">
                      üîÆ
                    </div>
                  </li>
                  <li>
                    Trends
                    <div className="inline align-middle text-4xl sm:text-6xl">
                      üìà
                    </div>
                  </li>
                  <li aria-hidden="true">
                    Futures
                    <div className="inline align-middle text-4xl sm:text-6xl">
                      ‚è≥
                    </div>
                  </li>
                </ul>
              </span>
              with
            </h1>
          </AnimateOnScroll>
          <h1 className="inline whitespace-nowrap text-6xl font-bold sm:text-8xl">
            Bulbbet
          </h1>

          <AnimateOnScroll
            reappear={true}
            className="absolute -top-14 right-2 text-7xl sm:-right-16 sm:-top-28 lg:-right-32 lg:-top-20 lg:text-9xl"
            classNameOnEnd="rotate-12"
          >
            {/* top right */}
            {emoji[0]}
          </AnimateOnScroll>
          <AnimateOnScroll
            reappear={true}
            className="absolute -top-14 left-2 text-7xl sm:-left-10 sm:-top-28 lg:-left-20 lg:-top-20 lg:text-9xl"
            classNameOnEnd="-rotate-[12deg]"
          >
            {/* top left */}
            {emoji[1]}
          </AnimateOnScroll>
          <AnimateOnScroll
            reappear={true}
            className="absolute -bottom-24 -left-0 hidden rotate-12 text-7xl sm:-bottom-24 sm:-left-5 lg:-left-52 lg:top-1/2 lg:-mt-16 lg:flex lg:text-9xl"
            classNameOnStart="rotate-[10deg]"
            classNameOnEnd="-rotate-[10deg]"
          >
            {/* bottom left or mid left */}
            {emoji[2]}
          </AnimateOnScroll>
          <AnimateOnScroll
            reappear={true}
            className="absolute -bottom-24 -right-0 hidden rotate-12 text-7xl sm:-bottom-24 sm:-right-5 lg:-right-52 lg:top-1/2 lg:-mt-16 lg:flex lg:text-9xl"
            classNameOnStart="-rotate-[10deg]"
            classNameOnEnd="rotate-[10deg]"
          >
            {/* bottom right or mid right */}
            {emoji[3]}
          </AnimateOnScroll>
          <p className="py-6 text-3xl">Put your üí° where your mouth is</p>
          {/* </AnimateOnScroll> */}
          {/* <button className="btn btn-primary">Install Our App</button> */}
        </div>
      </div>
    </div>
    // </div>
  );
};
